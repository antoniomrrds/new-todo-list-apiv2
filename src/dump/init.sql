CREATE DATABASE IF NOT EXISTS db_todo_list;

USE db_todo_list;

-- Tabela de Tags
CREATE TABLE IF NOT EXISTS tbl_tag
(
    ID          SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NAME        VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(500) DEFAULT NULL,
    ACTIVE      TINYINT(1)   DEFAULT 1,
    CREATED_AT  DATETIME     DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT  DATETIME     DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela de Categorias
CREATE TABLE IF NOT EXISTS tbl_category
(
    ID          SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NAME        VARCHAR(255) NOT NULL UNIQUE,
    DESCRIPTION VARCHAR(500) DEFAULT NULL,
    ACTIVE      TINYINT(1)   DEFAULT 1,
    CREATED_AT  DATETIME     DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT  DATETIME     DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela de Usuários
CREATE TABLE IF NOT EXISTS tbl_user
(
    ID         INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NAME       VARCHAR(255) NOT NULL,
    EMAIL      VARCHAR(255) NOT NULL UNIQUE,
    PASSWORD   VARCHAR(255) NOT NULL, -- Senha criptografada
    ACTIVE     TINYINT(1) DEFAULT 1,  -- Status do usuário (ativo/inativo)
    CREATED_AT DATETIME   DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT DATETIME   DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela de Papéis (Roles)
CREATE TABLE IF NOT EXISTS tbl_role
(
    ID          INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NAME        VARCHAR(255) NOT NULL UNIQUE,
    DESCRIPTION VARCHAR(500)    DEFAULT NULL,
    ROLE_TYPE   INT UNSIGNED NOT NULL UNIQUE, -- 1 = Normal, 2 = Admin
    CREATED_AT  DATETIME        DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT  DATETIME        DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Tabela intermediária de Usuários e Papéis (Relação Muitos-para-Muitos)
CREATE TABLE IF NOT EXISTS tbl_user_role
(
    ID_USER INT UNSIGNED, -- Relacionamento com o usuário
    ID_ROLE INT UNSIGNED, -- Relacionamento com o papel
    PRIMARY KEY (ID_USER, ID_ROLE),
    FOREIGN KEY (ID_USER) REFERENCES tbl_user (ID) ON DELETE CASCADE,
    FOREIGN KEY (ID_ROLE) REFERENCES tbl_role (ID) ON DELETE CASCADE
);

-- Tabela de Tarefas
CREATE TABLE IF NOT EXISTS tbl_todo
(
    ID              INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    NAME            VARCHAR(255) NOT NULL,
    DESCRIPTION     TEXT         NOT NULL,
    IS_COMPLETED    TINYINT(1) DEFAULT 0,
    ACTIVE          TINYINT(1) DEFAULT 1,
    EXPIRATION_DATE DATETIME   DEFAULT NULL,
    CREATED_AT      DATETIME   DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT      DATETIME   DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    ID_USER         INT UNSIGNED, -- Relacionamento com o usuário
    FOREIGN KEY (ID_USER) REFERENCES tbl_user (ID) ON DELETE SET NULL
);

-- Tabela de Tags para Tarefas
CREATE TABLE IF NOT EXISTS tbl_todo_tag
(
    ID      INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    ID_TODO INT UNSIGNED,
    ID_TAG  SMALLINT UNSIGNED,
    CONSTRAINT UNIQ_TODO_TAG UNIQUE (ID_TODO, ID_TAG),
    FOREIGN KEY (ID_TODO) REFERENCES tbl_todo (ID) ON DELETE CASCADE,
    FOREIGN KEY (ID_TAG) REFERENCES tbl_tag (ID) ON DELETE CASCADE
);

-- Tabela de Categorias para Tarefas
CREATE TABLE IF NOT EXISTS tbl_todo_category
(
    ID          INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    ID_TODO     INT UNSIGNED,
    ID_CATEGORY SMALLINT UNSIGNED,
    CONSTRAINT UNIQ_TODO_CATEGORY UNIQUE (ID_TODO, ID_CATEGORY),
    FOREIGN KEY (ID_TODO) REFERENCES tbl_todo (ID) ON DELETE CASCADE,
    FOREIGN KEY (ID_CATEGORY) REFERENCES tbl_category (ID) ON DELETE CASCADE
);

